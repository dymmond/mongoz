---
name: Test Suite

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    services:
      mongodb:
        restart: always
        image: mongo:latest
        container_name: mongo
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: mongoadmin
          MONGO_INITDB_DATABASE: mongodb
        volumes:
            - "mongo_db_data:/data/db"
        expose:
          - 27017
        ports:
          - 27017:27017

      mongo-express:
        image: mongo-express
        restart: always
        ports:
          - 8081:8081
        environment:
          ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
          ME_CONFIG_MONGODB_SERVER: mongodb
          ME_CONFIG_MONGODB_ADMINUSERNAME: root
          ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin
          ME_CONFIG_BASICAUTH_USERNAME: admin
          ME_CONFIG_BASICAUTH_PASSWORD: password

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v02
      - name: "Install dependencies"
        if: steps.cache.outputs.cache-hit != 'true'
        run: "scripts/install"
      # - name: "Run linting checks"
      #   run: "scripts/check"
      - name: "Run tests"
        env:
          DATABASE_URI: "mongodb://root:mongoadmin@localhost:27017"
        run: "scripts/test"
